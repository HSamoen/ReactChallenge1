{"ast":null,"code":"var _jsxFileName = \"/Users/HSamoenEban/Downloads/my-user-form-app/src/components/Users/AddUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport classes from './AddUser.module.css';\n//for nonjavascript files add extention -->.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = props => {\n  _s();\n  const [enteredUsername, setEnteredUsername] = useState('');\n  //inital state is set to an empty string--> no input\n  //[enteredUsername, setEnteredUsername] : a javascript syntax called array de-structuring and is used because useState() always returns an array with exactly two elements\n\n  const AddUserHandler = event => {\n    event.preventDefault();\n  };\n  //event.preventDefault() --> prevent default which for the submission event is that a request is sent\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: AddUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n//add in id for accessibility\n//htmlFor is the prop name for assigning the 'for' attribute to a label\n//onSubmit prop to specify a function that should be executed when the form is submitted\n_s(AddUser, \"I/4JjuOwi6dpLlbCQv6wjrLdwas=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","Button","classes","jsxDEV","_jsxDEV","AddUser","props","_s","enteredUsername","setEnteredUsername","AddUserHandler","event","preventDefault","className","input","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","_c","$RefreshReg$"],"sources":["/Users/HSamoenEban/Downloads/my-user-form-app/src/components/Users/AddUser.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport classes from './AddUser.module.css'\n//for nonjavascript files add extention -->.css\n\n\nconst AddUser = (props) => {\n    const [enteredUsername, setEnteredUsername] = useState('')\n    //inital state is set to an empty string--> no input\n    //[enteredUsername, setEnteredUsername] : a javascript syntax called array de-structuring and is used because useState() always returns an array with exactly two elements\n    \n    const AddUserHandler = (event) => {\n        event.preventDefault();\n    }\n//event.preventDefault() --> prevent default which for the submission event is that a request is sent\n    return (\n        <Card className={classes.input}>\n            <form onSubmit={AddUserHandler}>\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" type=\"text\"></input>\n            <label htmlFor=\"age\">Age (Years)</label>\n            <input id=\"age\" type=\"number\"></input>\n            <Button type=\"submit\">Add User</Button>\n        </form>\n        </Card>\n    )\n}\n//add in id for accessibility\n//htmlFor is the prop name for assigning the 'for' attribute to a label\n//onSubmit prop to specify a function that should be executed when the form is submitted\n\n\nexport default AddUser;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D;EACA;;EAEA,MAAMW,cAAc,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;EAC1B,CAAC;EACL;EACI,oBACIR,OAAA,CAACJ,IAAI;IAACa,SAAS,EAAEX,OAAO,CAACY,KAAM;IAAAC,QAAA,eAC3BX,OAAA;MAAMY,QAAQ,EAAEN,cAAe;MAAAK,QAAA,gBAC/BX,OAAA;QAAOa,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1CjB,OAAA;QAAOkB,EAAE,EAAC,UAAU;QAACC,IAAI,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACzCjB,OAAA;QAAOa,OAAO,EAAC,KAAK;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxCjB,OAAA;QAAOkB,EAAE,EAAC,KAAK;QAACC,IAAI,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACtCjB,OAAA,CAACH,MAAM;QAACsB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEf,CAAC;AACD;AACA;AACA;AAAAd,EAAA,CAvBMF,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}